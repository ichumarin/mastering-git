---
- name: R1soft Server Installation on ubuntu 16.04
  hosts: all
  user: ubuntu
  connection: ssh
  become: yes
  become_method: sudo 
  
  vars:
    user_name: admin
    password: redhat

  tasks:

  - name: Create a repo
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.copy:
      content: "deb http://repo.r1soft.com/apt stable main"
      dest: /etc/apt/sources.list

  - name: Add an Apt signing key
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.apt_key:
      url: http://repo.r1soft.com/r1soft.asc 
      state: present

  - name: Run the equivalent of "apt-get update" as a separate step
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.apt:
      update_cache: yes

  - name: Install Server
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.package:
      name: serverbackup-enterprise
      state: present
    notify:
    - Setup Login Credentials 
    - Start R1soft Server 
    
  
  handlers:
  - name: Setup Login Credentials
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.command: serverbackup-setup  --user {{ user_name }}  --pass {{ password }}


  - name: Start R1soft Server 
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.systemd: 
      name: sbm-server.service
      state: restarted
      enabled: true  