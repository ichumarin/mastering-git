--- # Connection
- name: Install Wordpress
  hosts: all
  become: true
  become_method: sudo 
  user: ec2-user
  
  vars: 
    hostname: 13.59.219.242 
    mysql_root_password: MXTS6/t!r)?3mt`J
    

  tasks: 
  - name: Install Apache2 Server On Ubuntu machine  
    when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
    ansible.builtin.package:
      name: 
      - apache2
      state: present
      update_cache: yes     
    
  # - name: 
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   shell: "echo 'ServerName {{ hostname }}' >> /etc/apache2/apache2.conf"
  #   ignore_errors: true
  #   notify: 
  #   - Start web server


  # handlers:
  # - name: Start web server 
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   systemd:
  #     name: apache2
  #     state: restarted
  #     enabled: true 
  
  # - name: Install httpd and prerequisites
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   package: 
  #     name: "{{ item }}" 
  #     state: present
  #   with_items:
  #   - php
  #   - php-mysql
  #   - wget 
  #   notify: 
  #   - Start web server


  # - name: Get wordpress 
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   get_url:
  #     url: https://wordpress.org/wordpress.tar.gz
  #     dest: /tmp/wordpress.tar.gz
  #     mode: '0440'

  # - name: Extract wordpress
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   ansible.builtin.unarchive:
  #     src: /tmp/wordpress.tar.gz
  #     dest: /var/www/html
  #     remote_src: true

  # - name: Host Wordpress
  #   when: ( ansible_facts['distribution'] == "Ubuntu" or ansible_facts['distribution_version'] == "16.04" )
  #   shell: "cp -r /var/www/html/wordpress/* /var/www/html/"
  #   ignore_errors: true


  # handlers:
  # - name: Start web server
  #   when: ( ansible_facts['distribution'] == "Amazon" or ansible_facts['distribution'] == "CentOS" )
  #   systemd: 
  #     name: httpd 
  #     state: restarted
  #     enabled: true

